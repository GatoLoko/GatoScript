#!/usr/bin/env python
# coding: utf-8
#Instalador de GatoScript
import os

# Variables del entorno de trabajo
home = os.environ["HOME"]
directorio_xchat = home + "/.xchat2/"
directorio_actual = os.getcwd()
gatoscript = directorio_xchat + "gatoscript.py"
# Archivos a modificar
archivo_ctcp = directorio_xchat + "ctcpreply.conf"
ctcp_antiguo = archivo_ctcp + ".bak"
archivo_botones = directorio_xchat + "buttons.conf"
archivo_copia = archivo_botones + ".bak"
#archivo_tab = directorio_xchat + "tabmenu.conf"
#tab_antiguo = archivo_tab + ".bak"
archivo_popup = directorio_xchat + "popup.conf"
popup_antiguo = archivo_popup + ".bak"
xchatconf = directorio_xchat + "xchat.conf"

def conf_busqueda(conf):
    global xchatconf
    archivo = file(xchatconf, "r")
    for linea in archivo.readlines():
        op, val = linea[0:len(linea)-1].split('=')
        opcion = op[0:len(op)-1]
        valor = val[1:len(val)]
        if (opcion == conf):
            return valor
    archivo.close

def conf_cambia(conf,nuevo):
    global xchatconf
    archivo = file(xchatconf, "r")
    memoria = archivo.read().split("\n")
    archivo.close
    print len(memoria)
    for i in range(len(memoria)-1):
        if memoria[i] != "":
            opval = memoria[i].split('=')
            opcion = opval[0][0:len(opval[0])-1]
            valor = opval[1][1:len(opval[1])]
            if (opcion == conf):
                valor = nuevo + "\n"
            else:
                valor = opval[1][1:] + "\n"
            memoria[i] = opcion + " = " + valor
    archivo = file(xchatconf, "w")
    for linea in memoria:
        archivo.write(linea)
    archivo.close


lineas_ctcp = [
"NAME VERSION\n",
"CMD nctcp %s VERSION GatoScript for X-Chat\n",
"\n"
]

lineas_botones = [
"NAME Ayuda\n",
"CMD gato\n",
"\n"
]

menu = [
"NAME SUB\n",
"CMD GatoScript\n",
"\n",
"NAME SUB\n",
"CMD Informacion del sistema\n",
"\n",
"NAME Sistema\n",
"CMD gos\n",
"\n",
"NAME Uptime\n",
"CMD gup\n",
"\n",
"NAME ENDSUB\n",
"CMD\n",
"\n",
"NAME SUB\n",
"CMD XMMS\n",
"\n",
"NAME Cancion\n",
"CMD gxm\n",
"\n",
"NAME ENDSUB\n",
"CMD\n",
"\n",
"NAME ENDSUB\n",
"CMD\n",
"\n"
]

if os.path.exists(gatoscript):
	actualizacion = 1
	print "Se ha detectado una version anterior de GatoScript, no se modificaran los menus durante la actualizacion"
else:
	actualizacion = 0

## Instalamos los archivos del script
os.system("cp -r %s %s" %(directorio_actual + "/*",directorio_xchat))
os.system("rm %sinstalador" %directorio_xchat)

# Si no es la primera vez que se instala el GatoScript no modificamos
# los menos hasta que tengamos un algoritmo mejor
if actualizacion != 1:
	#if os.path.exists(
	# Configuramos la respuesta ctcp con la version del script
	if os.path.exists(archivo_ctcp):
		os.rename(archivo_ctcp, ctcp_antiguo)
		ctcp_copiar = open(ctcp_antiguo, "r")
		lineas = ctcp_copiar.readlines()
		ctcp_copiar.close
	else:
		lineas = ""
	ctcp_nuevo = open(archivo_ctcp, "w")
	for i in range(0, len(lineas)):
		ctcp_nuevo.write(lineas[i])
	for i in range(0, len(lineas_ctcp) -1):
		ctcp_nuevo.write(lineas_ctcp[i])
	ctcp_nuevo.close

	## Configuramos el menu de las pesta√±as
	#if os.path.exists(archivo_tab):
	#	os.rename(archivo_tab, tab_antiguo)
	#	tab_copiar = open(tab_antiguo, "r")
	#	lineas = tab_copiar.readlines()
	#	tab_copiar.close
	#else:
	#	lineas = ""
	#tab_nuevo = open(archivo.tab, "w")
	#for i in range(0, len(lineas)):
	#	tab_nuevo.write(lineas[i])
	#for i in range(0, len(menu)-1):
	#	tab_nuevo.write(menu[i])
	#tab_nuevo.close

	# Configuramos el menu de la lista de nicks
	if os.path.exists(archivo_popup):
		os.rename(archivo_popup, popup_antiguo)
		popup_copiar = open(popup_antiguo, "r")
		lineas = popup_copiar.readlines()
		popup_copiar.close
	else:
		lineas = ""
	popup_nuevo = open(archivo_popup, "w")
	for i in range(0, len(lineas)):
		popup_nuevo.write(lineas[i])
	for i in range(0, len(menu)-1):
		popup_nuevo.write(menu[i])
	popup_nuevo.close
	
	# Agregamos los botones y/o menus de opciones
	if os.path.exists(archivo_botones):
		os.rename(archivo_botones, archivo_copia)
		botones_old = open(archivo_copia, "r")
		lineas = botones_old.readlines()
		botones_old.close
		botones = open(archivo_botones, "w")
		for i in range(0, len(lineas)):
			botones.write(lineas[i])
		for i in range(0, len(lineas_botones)-1):
			botones.write(lineas_botones[i])
		botones.close

	# Activamos los menus ocultos
	conf_cambia("gui_usermenu", "1")

	print "Instalacion completada"
else:
	print "Actualizacion completada"
